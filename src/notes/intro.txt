RTL philosophy ->
"The more your tests resembles the way your software is used, the more confidance they can give you"

CRA provides Jest and RTL out of the box.

by default 'npm test' runs Jest in watch mode.

test structure=>

testDescription= "any text to properly describe what is the test case"
testExpectation = ()=>{
    // a call back function where test is asserted
    expect().matcherFunction()
}
timeOut = 5s (default value)

test(testDescription,testExpectation, timeout)

test or it both mean same.

jest is provided globally by default, so no need to import specifically.

test.only(...........) => jest runs only this test and skips others (if using 'it' use=> fit)
test.skip(...........) => jest skios this test and runs other tests (if using 'it' use=> xit)

Grouping tests=>
   tests can be grouped using describe.

.only and .skip can be used on describe as well, 
you can nest describe blocks.
and you can have multiple describe blocks in a single test file.

tests can be present with '.test' or '.spec' extensions or in a folder with name '__tests__'